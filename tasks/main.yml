- name: Generate openssl config
  template: src=openssl-extensions.ini.j2 dest="{{temp_openssl_ext_conf}}"
  when: generate_self_signed_certificate

- name: Create certificate folder
  file: path="{{ certificate_folder }}" state=directory
  when: generate_self_signed_certificate

- name: Generate key
  shell: openssl genrsa -out {{private_key_file}} {{key_size}}
  args:
    creates: "{{private_key_file}}"
  when: generate_self_signed_certificate

- name: Generate certificate request
  shell: /usr/bin/openssl req -new -subj "/C=/ST=/L=/O=/CN={{common_name}}" -key {{private_key_file}} -out {{csr_file}}
  args:
    creates: "{{csr_file}}"
  when: generate_self_signed_certificate

- name: Generate certificate
  shell: openssl x509 -req -signkey {{private_key_file}} -days {{days}} -in {{csr_file}} -out {{certificate_file}} -extfile {{temp_openssl_ext_conf}}
  args:
    creates: "{{certificate_file}}"
  when: generate_self_signed_certificate

- name: Remove openssl temporary config
  file: path="{{temp_openssl_ext_conf}}" state=absent
  when: generate_self_signed_certificate

- include_vars: "{{ inventory_dir }}/group_vars/{{ rancher_project_name }}/apikey.yml"

- name: Get rancher certificate list
  uri:
    method: GET
    user: "{{ rancher_api_key_project_token }}"
    password: "{{ rancher_api_key_project_secret }}"
    url: "{{rancher_master_url}}/v1/projects/{{ rancher_project_id }}/certificates"
    return_content: yes
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
  register: rancher_certificate_list

- name: Extract existing certificate id if any
  set_fact:
    customer_cert_id: "{{rancher_certificate_list.json.data |  selectattr('name', 'equalto', key_name) |  selectattr('removed', 'none') |map(attribute='id') | list }}"

- name: Upload certificate to rancher
  uri:
    method: POST
    status_code: 201
    user: "{{ rancher_api_key_project_token }}"
    password: "{{ rancher_api_key_project_secret }}"
    body: ' {{rancher_cert_body | to_json}}'
    url: "{{rancher_master_url}}/v1/projects/{{ rancher_project_id }}/certificate"
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
  when: customer_cert_id | length  == 0

- name: Update certificate in rancher
  uri:
    method: PUT
    status_code: 200
    user: "{{ rancher_api_key_project_token }}"
    password: "{{ rancher_api_key_project_secret }}"
    body: ' {{rancher_cert_body | to_json}}'
    url: "{{rancher_master_url}}/v1/projects/{{ rancher_project_id }}/certificate/{{ customer_cert_id[0] }}"
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
  when: customer_cert_id | length  > 0
